services:
  app:
    container_name: node1
    build:
      context: .
    ports:
      - "8081:80" 
    volumes:
      - ./app:/var/www/html
    networks:
      - medis-network
    depends_on:
      - db

  app2:
    container_name: node2
    build:
      context: .
    ports:
      - "8082:80" 
    volumes:
      - ./app:/var/www/html
    networks:
      - medis-network
    depends_on:
      - db

  app3:
    container_name: node3
    build:
      context: .
    ports:
      - "8083:80" 
    volumes:
      - ./app:/var/www/html
    networks:
      - medis-network
    depends_on:
      - db

  app4:
    container_name: node4
    build:
      context: .
    ports:
      - "8084:80" 
    volumes:
      - ./app:/var/www/html
    networks:
      - medis-network
    depends_on:
      - db

  cloudflare-tunnel:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel
    command: tunnel --no-autoupdate run --token eyJhIjoiYTY3MDkxYmU0OTEyOWQxYWU4MzRhZGEyMWRlMzEyYmQiLCJ0IjoiNWQ0NzExN2ItZjQwMC00NDFjLTkwMTgtZGQxNDc2ZTQzNWI1IiwicyI6Ik56TmxZbU0yTWpRdFpUZzFNeTAwWmpJd0xUazVZalF0TVdNME1URXpORFkxWWpFeSJ9
    networks:
      - medis-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - medis-network

  db:
    image: mariadb
    container_name: database_medis
    environment:
      TZ: 'Asia/Jakarta'
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: medis
      MYSQL_USER: root
      MYSQL_PASSWORD: "root"
    volumes:
      - ./mysql:/var/lib/mysql
      - ./event.cnf:/etc/mysql/conf.d/event.cnf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - medis-network

  phpmyadmin:
    image: phpmyadmin
    restart: always
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      TZ: Asia/Jakarta
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: root
    depends_on:
      - db
    networks:
      - medis-network

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
      - "9443:9443"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - medis-network

networks:
  medis-network:
    driver: bridge

volumes:
  portainer-data:
    name: portainer-data